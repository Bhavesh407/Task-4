# Name of your workflow
name: Java CI with Maven and Docker Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on (Ubuntu Linux)
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # 3. Grant execute permission for mvnw (needed on Linux runner)
      - name: Grant execute permission for mvnw
        run: chmod +x mvnw
        
      # 4. Build the Java application with Maven (skipping tests)
      - name: Build with Maven
        run: ./mvnw package --batch-mode --no-transfer-progress -DskipTests

      # 5. Build the Docker image
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag task-api-app:latest
        
      # Optional: You could add steps here to push the Docker image to a registry
      # like Docker Hub or GitHub Container Registry, but it's not required by the task.